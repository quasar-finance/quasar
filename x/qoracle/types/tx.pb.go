// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: qoracle/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	balancer "github.com/abag/quasarnode/osmosis/v9/gamm/pool-models/balancer"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreatePoolPosition struct {
	Creator         string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PoolId          string       `protobuf:"bytes,2,opt,name=poolId,proto3" json:"poolId,omitempty"`
	Metrics         *PoolMetrics `protobuf:"bytes,3,opt,name=metrics,proto3" json:"metrics,omitempty"`
	LastUpdatedTime uint64       `protobuf:"varint,4,opt,name=lastUpdatedTime,proto3" json:"lastUpdatedTime,omitempty"`
}

func (m *MsgCreatePoolPosition) Reset()         { *m = MsgCreatePoolPosition{} }
func (m *MsgCreatePoolPosition) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePoolPosition) ProtoMessage()    {}
func (*MsgCreatePoolPosition) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{0}
}
func (m *MsgCreatePoolPosition) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePoolPosition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePoolPosition.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePoolPosition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePoolPosition.Merge(m, src)
}
func (m *MsgCreatePoolPosition) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePoolPosition) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePoolPosition.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePoolPosition proto.InternalMessageInfo

func (m *MsgCreatePoolPosition) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreatePoolPosition) GetPoolId() string {
	if m != nil {
		return m.PoolId
	}
	return ""
}

func (m *MsgCreatePoolPosition) GetMetrics() *PoolMetrics {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func (m *MsgCreatePoolPosition) GetLastUpdatedTime() uint64 {
	if m != nil {
		return m.LastUpdatedTime
	}
	return 0
}

type MsgCreatePoolPositionResponse struct {
}

func (m *MsgCreatePoolPositionResponse) Reset()         { *m = MsgCreatePoolPositionResponse{} }
func (m *MsgCreatePoolPositionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePoolPositionResponse) ProtoMessage()    {}
func (*MsgCreatePoolPositionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{1}
}
func (m *MsgCreatePoolPositionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePoolPositionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePoolPositionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePoolPositionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePoolPositionResponse.Merge(m, src)
}
func (m *MsgCreatePoolPositionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePoolPositionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePoolPositionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePoolPositionResponse proto.InternalMessageInfo

type MsgUpdatePoolPosition struct {
	Creator         string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PoolId          string       `protobuf:"bytes,2,opt,name=poolId,proto3" json:"poolId,omitempty"`
	Metrics         *PoolMetrics `protobuf:"bytes,3,opt,name=metrics,proto3" json:"metrics,omitempty"`
	LastUpdatedTime uint64       `protobuf:"varint,4,opt,name=lastUpdatedTime,proto3" json:"lastUpdatedTime,omitempty"`
}

func (m *MsgUpdatePoolPosition) Reset()         { *m = MsgUpdatePoolPosition{} }
func (m *MsgUpdatePoolPosition) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePoolPosition) ProtoMessage()    {}
func (*MsgUpdatePoolPosition) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{2}
}
func (m *MsgUpdatePoolPosition) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePoolPosition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePoolPosition.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePoolPosition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePoolPosition.Merge(m, src)
}
func (m *MsgUpdatePoolPosition) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePoolPosition) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePoolPosition.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePoolPosition proto.InternalMessageInfo

func (m *MsgUpdatePoolPosition) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdatePoolPosition) GetPoolId() string {
	if m != nil {
		return m.PoolId
	}
	return ""
}

func (m *MsgUpdatePoolPosition) GetMetrics() *PoolMetrics {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func (m *MsgUpdatePoolPosition) GetLastUpdatedTime() uint64 {
	if m != nil {
		return m.LastUpdatedTime
	}
	return 0
}

type MsgUpdatePoolPositionResponse struct {
}

func (m *MsgUpdatePoolPositionResponse) Reset()         { *m = MsgUpdatePoolPositionResponse{} }
func (m *MsgUpdatePoolPositionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePoolPositionResponse) ProtoMessage()    {}
func (*MsgUpdatePoolPositionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{3}
}
func (m *MsgUpdatePoolPositionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePoolPositionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePoolPositionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePoolPositionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePoolPositionResponse.Merge(m, src)
}
func (m *MsgUpdatePoolPositionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePoolPositionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePoolPositionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePoolPositionResponse proto.InternalMessageInfo

type MsgDeletePoolPosition struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PoolId  string `protobuf:"bytes,2,opt,name=poolId,proto3" json:"poolId,omitempty"`
}

func (m *MsgDeletePoolPosition) Reset()         { *m = MsgDeletePoolPosition{} }
func (m *MsgDeletePoolPosition) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePoolPosition) ProtoMessage()    {}
func (*MsgDeletePoolPosition) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{4}
}
func (m *MsgDeletePoolPosition) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePoolPosition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePoolPosition.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePoolPosition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePoolPosition.Merge(m, src)
}
func (m *MsgDeletePoolPosition) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePoolPosition) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePoolPosition.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePoolPosition proto.InternalMessageInfo

func (m *MsgDeletePoolPosition) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeletePoolPosition) GetPoolId() string {
	if m != nil {
		return m.PoolId
	}
	return ""
}

type MsgDeletePoolPositionResponse struct {
}

func (m *MsgDeletePoolPositionResponse) Reset()         { *m = MsgDeletePoolPositionResponse{} }
func (m *MsgDeletePoolPositionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePoolPositionResponse) ProtoMessage()    {}
func (*MsgDeletePoolPositionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{5}
}
func (m *MsgDeletePoolPositionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePoolPositionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePoolPositionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePoolPositionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePoolPositionResponse.Merge(m, src)
}
func (m *MsgDeletePoolPositionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePoolPositionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePoolPositionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePoolPositionResponse proto.InternalMessageInfo

type MsgCreatePoolRanking struct {
	Creator            string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PoolIdsSortedByAPY []string `protobuf:"bytes,3,rep,name=poolIdsSortedByAPY,proto3" json:"poolIdsSortedByAPY,omitempty"`
	PoolIdsSortedByTVL []string `protobuf:"bytes,4,rep,name=poolIdsSortedByTVL,proto3" json:"poolIdsSortedByTVL,omitempty"`
	LastUpdatedTime    uint64   `protobuf:"varint,5,opt,name=lastUpdatedTime,proto3" json:"lastUpdatedTime,omitempty"`
}

func (m *MsgCreatePoolRanking) Reset()         { *m = MsgCreatePoolRanking{} }
func (m *MsgCreatePoolRanking) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePoolRanking) ProtoMessage()    {}
func (*MsgCreatePoolRanking) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{6}
}
func (m *MsgCreatePoolRanking) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePoolRanking) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePoolRanking.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePoolRanking) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePoolRanking.Merge(m, src)
}
func (m *MsgCreatePoolRanking) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePoolRanking) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePoolRanking.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePoolRanking proto.InternalMessageInfo

func (m *MsgCreatePoolRanking) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreatePoolRanking) GetPoolIdsSortedByAPY() []string {
	if m != nil {
		return m.PoolIdsSortedByAPY
	}
	return nil
}

func (m *MsgCreatePoolRanking) GetPoolIdsSortedByTVL() []string {
	if m != nil {
		return m.PoolIdsSortedByTVL
	}
	return nil
}

func (m *MsgCreatePoolRanking) GetLastUpdatedTime() uint64 {
	if m != nil {
		return m.LastUpdatedTime
	}
	return 0
}

type MsgCreatePoolRankingResponse struct {
}

func (m *MsgCreatePoolRankingResponse) Reset()         { *m = MsgCreatePoolRankingResponse{} }
func (m *MsgCreatePoolRankingResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePoolRankingResponse) ProtoMessage()    {}
func (*MsgCreatePoolRankingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{7}
}
func (m *MsgCreatePoolRankingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePoolRankingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePoolRankingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePoolRankingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePoolRankingResponse.Merge(m, src)
}
func (m *MsgCreatePoolRankingResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePoolRankingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePoolRankingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePoolRankingResponse proto.InternalMessageInfo

type MsgUpdatePoolRanking struct {
	Creator            string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PoolIdsSortedByAPY []string `protobuf:"bytes,3,rep,name=poolIdsSortedByAPY,proto3" json:"poolIdsSortedByAPY,omitempty"`
	PoolIdsSortedByTVL []string `protobuf:"bytes,4,rep,name=poolIdsSortedByTVL,proto3" json:"poolIdsSortedByTVL,omitempty"`
	LastUpdatedTime    uint64   `protobuf:"varint,5,opt,name=lastUpdatedTime,proto3" json:"lastUpdatedTime,omitempty"`
}

func (m *MsgUpdatePoolRanking) Reset()         { *m = MsgUpdatePoolRanking{} }
func (m *MsgUpdatePoolRanking) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePoolRanking) ProtoMessage()    {}
func (*MsgUpdatePoolRanking) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{8}
}
func (m *MsgUpdatePoolRanking) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePoolRanking) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePoolRanking.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePoolRanking) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePoolRanking.Merge(m, src)
}
func (m *MsgUpdatePoolRanking) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePoolRanking) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePoolRanking.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePoolRanking proto.InternalMessageInfo

func (m *MsgUpdatePoolRanking) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdatePoolRanking) GetPoolIdsSortedByAPY() []string {
	if m != nil {
		return m.PoolIdsSortedByAPY
	}
	return nil
}

func (m *MsgUpdatePoolRanking) GetPoolIdsSortedByTVL() []string {
	if m != nil {
		return m.PoolIdsSortedByTVL
	}
	return nil
}

func (m *MsgUpdatePoolRanking) GetLastUpdatedTime() uint64 {
	if m != nil {
		return m.LastUpdatedTime
	}
	return 0
}

type MsgUpdatePoolRankingResponse struct {
}

func (m *MsgUpdatePoolRankingResponse) Reset()         { *m = MsgUpdatePoolRankingResponse{} }
func (m *MsgUpdatePoolRankingResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePoolRankingResponse) ProtoMessage()    {}
func (*MsgUpdatePoolRankingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{9}
}
func (m *MsgUpdatePoolRankingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePoolRankingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePoolRankingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePoolRankingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePoolRankingResponse.Merge(m, src)
}
func (m *MsgUpdatePoolRankingResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePoolRankingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePoolRankingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePoolRankingResponse proto.InternalMessageInfo

type MsgDeletePoolRanking struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgDeletePoolRanking) Reset()         { *m = MsgDeletePoolRanking{} }
func (m *MsgDeletePoolRanking) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePoolRanking) ProtoMessage()    {}
func (*MsgDeletePoolRanking) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{10}
}
func (m *MsgDeletePoolRanking) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePoolRanking) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePoolRanking.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePoolRanking) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePoolRanking.Merge(m, src)
}
func (m *MsgDeletePoolRanking) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePoolRanking) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePoolRanking.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePoolRanking proto.InternalMessageInfo

func (m *MsgDeletePoolRanking) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgDeletePoolRankingResponse struct {
}

func (m *MsgDeletePoolRankingResponse) Reset()         { *m = MsgDeletePoolRankingResponse{} }
func (m *MsgDeletePoolRankingResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePoolRankingResponse) ProtoMessage()    {}
func (*MsgDeletePoolRankingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{11}
}
func (m *MsgDeletePoolRankingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePoolRankingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePoolRankingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePoolRankingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePoolRankingResponse.Merge(m, src)
}
func (m *MsgDeletePoolRankingResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePoolRankingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePoolRankingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePoolRankingResponse proto.InternalMessageInfo

type MsgCreatePoolSpotPrice struct {
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PoolId          string `protobuf:"bytes,2,opt,name=poolId,proto3" json:"poolId,omitempty"`
	DenomIn         string `protobuf:"bytes,3,opt,name=denomIn,proto3" json:"denomIn,omitempty"`
	DenomOut        string `protobuf:"bytes,4,opt,name=denomOut,proto3" json:"denomOut,omitempty"`
	Price           string `protobuf:"bytes,5,opt,name=price,proto3" json:"price,omitempty"`
	LastUpdatedTime uint64 `protobuf:"varint,6,opt,name=lastUpdatedTime,proto3" json:"lastUpdatedTime,omitempty"`
}

func (m *MsgCreatePoolSpotPrice) Reset()         { *m = MsgCreatePoolSpotPrice{} }
func (m *MsgCreatePoolSpotPrice) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePoolSpotPrice) ProtoMessage()    {}
func (*MsgCreatePoolSpotPrice) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{12}
}
func (m *MsgCreatePoolSpotPrice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePoolSpotPrice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePoolSpotPrice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePoolSpotPrice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePoolSpotPrice.Merge(m, src)
}
func (m *MsgCreatePoolSpotPrice) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePoolSpotPrice) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePoolSpotPrice.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePoolSpotPrice proto.InternalMessageInfo

func (m *MsgCreatePoolSpotPrice) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreatePoolSpotPrice) GetPoolId() string {
	if m != nil {
		return m.PoolId
	}
	return ""
}

func (m *MsgCreatePoolSpotPrice) GetDenomIn() string {
	if m != nil {
		return m.DenomIn
	}
	return ""
}

func (m *MsgCreatePoolSpotPrice) GetDenomOut() string {
	if m != nil {
		return m.DenomOut
	}
	return ""
}

func (m *MsgCreatePoolSpotPrice) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *MsgCreatePoolSpotPrice) GetLastUpdatedTime() uint64 {
	if m != nil {
		return m.LastUpdatedTime
	}
	return 0
}

type MsgCreatePoolSpotPriceResponse struct {
}

func (m *MsgCreatePoolSpotPriceResponse) Reset()         { *m = MsgCreatePoolSpotPriceResponse{} }
func (m *MsgCreatePoolSpotPriceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePoolSpotPriceResponse) ProtoMessage()    {}
func (*MsgCreatePoolSpotPriceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{13}
}
func (m *MsgCreatePoolSpotPriceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePoolSpotPriceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePoolSpotPriceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePoolSpotPriceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePoolSpotPriceResponse.Merge(m, src)
}
func (m *MsgCreatePoolSpotPriceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePoolSpotPriceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePoolSpotPriceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePoolSpotPriceResponse proto.InternalMessageInfo

type MsgUpdatePoolSpotPrice struct {
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PoolId          string `protobuf:"bytes,2,opt,name=poolId,proto3" json:"poolId,omitempty"`
	DenomIn         string `protobuf:"bytes,3,opt,name=denomIn,proto3" json:"denomIn,omitempty"`
	DenomOut        string `protobuf:"bytes,4,opt,name=denomOut,proto3" json:"denomOut,omitempty"`
	Price           string `protobuf:"bytes,5,opt,name=price,proto3" json:"price,omitempty"`
	LastUpdatedTime uint64 `protobuf:"varint,6,opt,name=lastUpdatedTime,proto3" json:"lastUpdatedTime,omitempty"`
}

func (m *MsgUpdatePoolSpotPrice) Reset()         { *m = MsgUpdatePoolSpotPrice{} }
func (m *MsgUpdatePoolSpotPrice) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePoolSpotPrice) ProtoMessage()    {}
func (*MsgUpdatePoolSpotPrice) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{14}
}
func (m *MsgUpdatePoolSpotPrice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePoolSpotPrice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePoolSpotPrice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePoolSpotPrice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePoolSpotPrice.Merge(m, src)
}
func (m *MsgUpdatePoolSpotPrice) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePoolSpotPrice) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePoolSpotPrice.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePoolSpotPrice proto.InternalMessageInfo

func (m *MsgUpdatePoolSpotPrice) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdatePoolSpotPrice) GetPoolId() string {
	if m != nil {
		return m.PoolId
	}
	return ""
}

func (m *MsgUpdatePoolSpotPrice) GetDenomIn() string {
	if m != nil {
		return m.DenomIn
	}
	return ""
}

func (m *MsgUpdatePoolSpotPrice) GetDenomOut() string {
	if m != nil {
		return m.DenomOut
	}
	return ""
}

func (m *MsgUpdatePoolSpotPrice) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *MsgUpdatePoolSpotPrice) GetLastUpdatedTime() uint64 {
	if m != nil {
		return m.LastUpdatedTime
	}
	return 0
}

type MsgUpdatePoolSpotPriceResponse struct {
}

func (m *MsgUpdatePoolSpotPriceResponse) Reset()         { *m = MsgUpdatePoolSpotPriceResponse{} }
func (m *MsgUpdatePoolSpotPriceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePoolSpotPriceResponse) ProtoMessage()    {}
func (*MsgUpdatePoolSpotPriceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{15}
}
func (m *MsgUpdatePoolSpotPriceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePoolSpotPriceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePoolSpotPriceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePoolSpotPriceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePoolSpotPriceResponse.Merge(m, src)
}
func (m *MsgUpdatePoolSpotPriceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePoolSpotPriceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePoolSpotPriceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePoolSpotPriceResponse proto.InternalMessageInfo

type MsgDeletePoolSpotPrice struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PoolId   string `protobuf:"bytes,2,opt,name=poolId,proto3" json:"poolId,omitempty"`
	DenomIn  string `protobuf:"bytes,3,opt,name=denomIn,proto3" json:"denomIn,omitempty"`
	DenomOut string `protobuf:"bytes,4,opt,name=denomOut,proto3" json:"denomOut,omitempty"`
}

func (m *MsgDeletePoolSpotPrice) Reset()         { *m = MsgDeletePoolSpotPrice{} }
func (m *MsgDeletePoolSpotPrice) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePoolSpotPrice) ProtoMessage()    {}
func (*MsgDeletePoolSpotPrice) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{16}
}
func (m *MsgDeletePoolSpotPrice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePoolSpotPrice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePoolSpotPrice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePoolSpotPrice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePoolSpotPrice.Merge(m, src)
}
func (m *MsgDeletePoolSpotPrice) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePoolSpotPrice) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePoolSpotPrice.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePoolSpotPrice proto.InternalMessageInfo

func (m *MsgDeletePoolSpotPrice) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeletePoolSpotPrice) GetPoolId() string {
	if m != nil {
		return m.PoolId
	}
	return ""
}

func (m *MsgDeletePoolSpotPrice) GetDenomIn() string {
	if m != nil {
		return m.DenomIn
	}
	return ""
}

func (m *MsgDeletePoolSpotPrice) GetDenomOut() string {
	if m != nil {
		return m.DenomOut
	}
	return ""
}

type MsgDeletePoolSpotPriceResponse struct {
}

func (m *MsgDeletePoolSpotPriceResponse) Reset()         { *m = MsgDeletePoolSpotPriceResponse{} }
func (m *MsgDeletePoolSpotPriceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePoolSpotPriceResponse) ProtoMessage()    {}
func (*MsgDeletePoolSpotPriceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{17}
}
func (m *MsgDeletePoolSpotPriceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePoolSpotPriceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePoolSpotPriceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePoolSpotPriceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePoolSpotPriceResponse.Merge(m, src)
}
func (m *MsgDeletePoolSpotPriceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePoolSpotPriceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePoolSpotPriceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePoolSpotPriceResponse proto.InternalMessageInfo

type MsgCreatePoolInfo struct {
	Creator         string         `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PoolId          string         `protobuf:"bytes,2,opt,name=poolId,proto3" json:"poolId,omitempty"`
	Info            *balancer.Pool `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	LastUpdatedTime uint64         `protobuf:"varint,4,opt,name=lastUpdatedTime,proto3" json:"lastUpdatedTime,omitempty"`
}

func (m *MsgCreatePoolInfo) Reset()         { *m = MsgCreatePoolInfo{} }
func (m *MsgCreatePoolInfo) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePoolInfo) ProtoMessage()    {}
func (*MsgCreatePoolInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{18}
}
func (m *MsgCreatePoolInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePoolInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePoolInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePoolInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePoolInfo.Merge(m, src)
}
func (m *MsgCreatePoolInfo) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePoolInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePoolInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePoolInfo proto.InternalMessageInfo

func (m *MsgCreatePoolInfo) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreatePoolInfo) GetPoolId() string {
	if m != nil {
		return m.PoolId
	}
	return ""
}

func (m *MsgCreatePoolInfo) GetInfo() *balancer.Pool {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *MsgCreatePoolInfo) GetLastUpdatedTime() uint64 {
	if m != nil {
		return m.LastUpdatedTime
	}
	return 0
}

type MsgCreatePoolInfoResponse struct {
}

func (m *MsgCreatePoolInfoResponse) Reset()         { *m = MsgCreatePoolInfoResponse{} }
func (m *MsgCreatePoolInfoResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePoolInfoResponse) ProtoMessage()    {}
func (*MsgCreatePoolInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{19}
}
func (m *MsgCreatePoolInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePoolInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePoolInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePoolInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePoolInfoResponse.Merge(m, src)
}
func (m *MsgCreatePoolInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePoolInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePoolInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePoolInfoResponse proto.InternalMessageInfo

type MsgUpdatePoolInfo struct {
	Creator         string         `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PoolId          string         `protobuf:"bytes,2,opt,name=poolId,proto3" json:"poolId,omitempty"`
	Info            *balancer.Pool `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	LastUpdatedTime uint64         `protobuf:"varint,4,opt,name=lastUpdatedTime,proto3" json:"lastUpdatedTime,omitempty"`
}

func (m *MsgUpdatePoolInfo) Reset()         { *m = MsgUpdatePoolInfo{} }
func (m *MsgUpdatePoolInfo) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePoolInfo) ProtoMessage()    {}
func (*MsgUpdatePoolInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{20}
}
func (m *MsgUpdatePoolInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePoolInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePoolInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePoolInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePoolInfo.Merge(m, src)
}
func (m *MsgUpdatePoolInfo) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePoolInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePoolInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePoolInfo proto.InternalMessageInfo

func (m *MsgUpdatePoolInfo) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdatePoolInfo) GetPoolId() string {
	if m != nil {
		return m.PoolId
	}
	return ""
}

func (m *MsgUpdatePoolInfo) GetInfo() *balancer.Pool {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *MsgUpdatePoolInfo) GetLastUpdatedTime() uint64 {
	if m != nil {
		return m.LastUpdatedTime
	}
	return 0
}

type MsgUpdatePoolInfoResponse struct {
}

func (m *MsgUpdatePoolInfoResponse) Reset()         { *m = MsgUpdatePoolInfoResponse{} }
func (m *MsgUpdatePoolInfoResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePoolInfoResponse) ProtoMessage()    {}
func (*MsgUpdatePoolInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{21}
}
func (m *MsgUpdatePoolInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePoolInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePoolInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePoolInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePoolInfoResponse.Merge(m, src)
}
func (m *MsgUpdatePoolInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePoolInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePoolInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePoolInfoResponse proto.InternalMessageInfo

type MsgDeletePoolInfo struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PoolId  string `protobuf:"bytes,2,opt,name=poolId,proto3" json:"poolId,omitempty"`
}

func (m *MsgDeletePoolInfo) Reset()         { *m = MsgDeletePoolInfo{} }
func (m *MsgDeletePoolInfo) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePoolInfo) ProtoMessage()    {}
func (*MsgDeletePoolInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{22}
}
func (m *MsgDeletePoolInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePoolInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePoolInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePoolInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePoolInfo.Merge(m, src)
}
func (m *MsgDeletePoolInfo) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePoolInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePoolInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePoolInfo proto.InternalMessageInfo

func (m *MsgDeletePoolInfo) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeletePoolInfo) GetPoolId() string {
	if m != nil {
		return m.PoolId
	}
	return ""
}

type MsgDeletePoolInfoResponse struct {
}

func (m *MsgDeletePoolInfoResponse) Reset()         { *m = MsgDeletePoolInfoResponse{} }
func (m *MsgDeletePoolInfoResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePoolInfoResponse) ProtoMessage()    {}
func (*MsgDeletePoolInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{23}
}
func (m *MsgDeletePoolInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePoolInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePoolInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePoolInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePoolInfoResponse.Merge(m, src)
}
func (m *MsgDeletePoolInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePoolInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePoolInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePoolInfoResponse proto.InternalMessageInfo

type MsgStablePrice struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Denom   string `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	Price   string `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
}

func (m *MsgStablePrice) Reset()         { *m = MsgStablePrice{} }
func (m *MsgStablePrice) String() string { return proto.CompactTextString(m) }
func (*MsgStablePrice) ProtoMessage()    {}
func (*MsgStablePrice) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{24}
}
func (m *MsgStablePrice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStablePrice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStablePrice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStablePrice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStablePrice.Merge(m, src)
}
func (m *MsgStablePrice) XXX_Size() int {
	return m.Size()
}
func (m *MsgStablePrice) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStablePrice.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStablePrice proto.InternalMessageInfo

func (m *MsgStablePrice) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgStablePrice) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *MsgStablePrice) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

type MsgStablePriceResponse struct {
}

func (m *MsgStablePriceResponse) Reset()         { *m = MsgStablePriceResponse{} }
func (m *MsgStablePriceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgStablePriceResponse) ProtoMessage()    {}
func (*MsgStablePriceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{25}
}
func (m *MsgStablePriceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStablePriceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStablePriceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStablePriceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStablePriceResponse.Merge(m, src)
}
func (m *MsgStablePriceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgStablePriceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStablePriceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStablePriceResponse proto.InternalMessageInfo

type MsgUpdateOsmosisParams struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgUpdateOsmosisParams) Reset()         { *m = MsgUpdateOsmosisParams{} }
func (m *MsgUpdateOsmosisParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateOsmosisParams) ProtoMessage()    {}
func (*MsgUpdateOsmosisParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{26}
}
func (m *MsgUpdateOsmosisParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateOsmosisParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateOsmosisParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateOsmosisParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateOsmosisParams.Merge(m, src)
}
func (m *MsgUpdateOsmosisParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateOsmosisParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateOsmosisParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateOsmosisParams proto.InternalMessageInfo

func (m *MsgUpdateOsmosisParams) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgUpdateOsmosisParamsResponse struct {
	PacketSequence uint64 `protobuf:"varint,1,opt,name=packet_sequence,json=packetSequence,proto3" json:"packet_sequence,omitempty"`
}

func (m *MsgUpdateOsmosisParamsResponse) Reset()         { *m = MsgUpdateOsmosisParamsResponse{} }
func (m *MsgUpdateOsmosisParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateOsmosisParamsResponse) ProtoMessage()    {}
func (*MsgUpdateOsmosisParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a216e1369aaebb38, []int{27}
}
func (m *MsgUpdateOsmosisParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateOsmosisParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateOsmosisParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateOsmosisParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateOsmosisParamsResponse.Merge(m, src)
}
func (m *MsgUpdateOsmosisParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateOsmosisParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateOsmosisParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateOsmosisParamsResponse proto.InternalMessageInfo

func (m *MsgUpdateOsmosisParamsResponse) GetPacketSequence() uint64 {
	if m != nil {
		return m.PacketSequence
	}
	return 0
}

func init() {
	proto.RegisterType((*MsgCreatePoolPosition)(nil), "abag.quasarnode.qoracle.MsgCreatePoolPosition")
	proto.RegisterType((*MsgCreatePoolPositionResponse)(nil), "abag.quasarnode.qoracle.MsgCreatePoolPositionResponse")
	proto.RegisterType((*MsgUpdatePoolPosition)(nil), "abag.quasarnode.qoracle.MsgUpdatePoolPosition")
	proto.RegisterType((*MsgUpdatePoolPositionResponse)(nil), "abag.quasarnode.qoracle.MsgUpdatePoolPositionResponse")
	proto.RegisterType((*MsgDeletePoolPosition)(nil), "abag.quasarnode.qoracle.MsgDeletePoolPosition")
	proto.RegisterType((*MsgDeletePoolPositionResponse)(nil), "abag.quasarnode.qoracle.MsgDeletePoolPositionResponse")
	proto.RegisterType((*MsgCreatePoolRanking)(nil), "abag.quasarnode.qoracle.MsgCreatePoolRanking")
	proto.RegisterType((*MsgCreatePoolRankingResponse)(nil), "abag.quasarnode.qoracle.MsgCreatePoolRankingResponse")
	proto.RegisterType((*MsgUpdatePoolRanking)(nil), "abag.quasarnode.qoracle.MsgUpdatePoolRanking")
	proto.RegisterType((*MsgUpdatePoolRankingResponse)(nil), "abag.quasarnode.qoracle.MsgUpdatePoolRankingResponse")
	proto.RegisterType((*MsgDeletePoolRanking)(nil), "abag.quasarnode.qoracle.MsgDeletePoolRanking")
	proto.RegisterType((*MsgDeletePoolRankingResponse)(nil), "abag.quasarnode.qoracle.MsgDeletePoolRankingResponse")
	proto.RegisterType((*MsgCreatePoolSpotPrice)(nil), "abag.quasarnode.qoracle.MsgCreatePoolSpotPrice")
	proto.RegisterType((*MsgCreatePoolSpotPriceResponse)(nil), "abag.quasarnode.qoracle.MsgCreatePoolSpotPriceResponse")
	proto.RegisterType((*MsgUpdatePoolSpotPrice)(nil), "abag.quasarnode.qoracle.MsgUpdatePoolSpotPrice")
	proto.RegisterType((*MsgUpdatePoolSpotPriceResponse)(nil), "abag.quasarnode.qoracle.MsgUpdatePoolSpotPriceResponse")
	proto.RegisterType((*MsgDeletePoolSpotPrice)(nil), "abag.quasarnode.qoracle.MsgDeletePoolSpotPrice")
	proto.RegisterType((*MsgDeletePoolSpotPriceResponse)(nil), "abag.quasarnode.qoracle.MsgDeletePoolSpotPriceResponse")
	proto.RegisterType((*MsgCreatePoolInfo)(nil), "abag.quasarnode.qoracle.MsgCreatePoolInfo")
	proto.RegisterType((*MsgCreatePoolInfoResponse)(nil), "abag.quasarnode.qoracle.MsgCreatePoolInfoResponse")
	proto.RegisterType((*MsgUpdatePoolInfo)(nil), "abag.quasarnode.qoracle.MsgUpdatePoolInfo")
	proto.RegisterType((*MsgUpdatePoolInfoResponse)(nil), "abag.quasarnode.qoracle.MsgUpdatePoolInfoResponse")
	proto.RegisterType((*MsgDeletePoolInfo)(nil), "abag.quasarnode.qoracle.MsgDeletePoolInfo")
	proto.RegisterType((*MsgDeletePoolInfoResponse)(nil), "abag.quasarnode.qoracle.MsgDeletePoolInfoResponse")
	proto.RegisterType((*MsgStablePrice)(nil), "abag.quasarnode.qoracle.MsgStablePrice")
	proto.RegisterType((*MsgStablePriceResponse)(nil), "abag.quasarnode.qoracle.MsgStablePriceResponse")
	proto.RegisterType((*MsgUpdateOsmosisParams)(nil), "abag.quasarnode.qoracle.MsgUpdateOsmosisParams")
	proto.RegisterType((*MsgUpdateOsmosisParamsResponse)(nil), "abag.quasarnode.qoracle.MsgUpdateOsmosisParamsResponse")
}

func init() { proto.RegisterFile("qoracle/tx.proto", fileDescriptor_a216e1369aaebb38) }

var fileDescriptor_a216e1369aaebb38 = []byte{
	// 941 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x58, 0x4f, 0x8f, 0xdb, 0x44,
	0x14, 0x5f, 0x93, 0xec, 0x2e, 0x99, 0x8a, 0x2d, 0x1d, 0x42, 0x6b, 0x5c, 0x6a, 0xc2, 0x0a, 0xa9,
	0x51, 0xa4, 0xd8, 0x34, 0x08, 0x2a, 0x2e, 0x48, 0x94, 0x72, 0x88, 0xd4, 0xa8, 0x91, 0xb3, 0xac,
	0x04, 0x97, 0x68, 0xe2, 0x4c, 0x8d, 0x55, 0xdb, 0xe3, 0xf5, 0x38, 0x55, 0x57, 0xaa, 0x04, 0x1f,
	0x81, 0x6f, 0xc0, 0x87, 0xe8, 0x8d, 0x13, 0x47, 0x8e, 0x3d, 0x72, 0x44, 0xbb, 0x5f, 0x04, 0x79,
	0x3c, 0xfe, 0x17, 0x4f, 0x9c, 0xc9, 0x22, 0xa1, 0xee, 0xcd, 0x33, 0xef, 0xcd, 0xfb, 0xfd, 0xde,
	0x6f, 0xfe, 0xbc, 0x27, 0x83, 0xf7, 0xcf, 0x48, 0x84, 0x6c, 0x0f, 0x9b, 0xf1, 0x4b, 0x23, 0x8c,
	0x48, 0x4c, 0xe0, 0x1d, 0xb4, 0x40, 0x8e, 0x71, 0xb6, 0x42, 0x14, 0x45, 0x01, 0x59, 0x62, 0x83,
	0x7b, 0x68, 0x5d, 0x87, 0x38, 0x84, 0xf9, 0x98, 0xc9, 0x57, 0xea, 0xae, 0xdd, 0xcd, 0x02, 0x84,
	0x84, 0x78, 0xf3, 0x90, 0x50, 0x37, 0x76, 0x49, 0xc0, 0x8d, 0x5a, 0xc5, 0x18, 0xa1, 0xe0, 0xb9,
	0x1b, 0x38, 0xdc, 0x76, 0xaf, 0x62, 0xa3, 0x21, 0x89, 0xe7, 0x61, 0xe4, 0xda, 0x98, 0x9b, 0xef,
	0x54, 0xcc, 0x6e, 0xf0, 0x2c, 0x03, 0x7c, 0x48, 0xa8, 0x4f, 0xa8, 0x4b, 0xcd, 0x17, 0x5f, 0x9b,
	0x0e, 0xf2, 0x7d, 0xe6, 0x30, 0xf4, 0xc9, 0x12, 0x7b, 0xd4, 0x5c, 0x20, 0x0f, 0x05, 0x36, 0x8e,
	0xf2, 0x8f, 0x29, 0x21, 0x9e, 0x90, 0x8c, 0x8f, 0xe3, 0xc8, 0xb5, 0x29, 0xb7, 0x7d, 0x9a, 0xd9,
	0x96, 0x38, 0x20, 0x7e, 0x4a, 0x64, 0xee, 0xa3, 0x30, 0xcc, 0xf9, 0x1e, 0xbf, 0x56, 0xc0, 0x87,
	0x13, 0xea, 0x7c, 0x17, 0x61, 0x14, 0xe3, 0x24, 0xec, 0x94, 0xe7, 0x0a, 0x55, 0x70, 0x68, 0x27,
	0xb3, 0x24, 0x52, 0x95, 0x9e, 0xd2, 0xef, 0x58, 0xd9, 0x10, 0xde, 0x06, 0x07, 0x09, 0xd8, 0x78,
	0xa9, 0xbe, 0xc3, 0x0c, 0x7c, 0x04, 0xbf, 0x01, 0x87, 0x1c, 0x5f, 0x6d, 0xf5, 0x94, 0xfe, 0x8d,
	0xd1, 0x67, 0xc6, 0x06, 0xd5, 0x8d, 0x04, 0x69, 0x92, 0xfa, 0x5a, 0xd9, 0x22, 0xd8, 0x07, 0x37,
	0x3d, 0x44, 0xe3, 0x1f, 0xc2, 0x25, 0x8a, 0xf1, 0xf2, 0xc4, 0xf5, 0xb1, 0xda, 0xee, 0x29, 0xfd,
	0xb6, 0xb5, 0x3e, 0x7d, 0xfc, 0x09, 0xb8, 0x27, 0x24, 0x6d, 0x61, 0x1a, 0x92, 0x80, 0xe2, 0x2c,
	0xad, 0x74, 0xcd, 0x35, 0x4b, 0xab, 0x4e, 0x3a, 0x4f, 0x6b, 0xcc, 0xb2, 0x7a, 0x8c, 0x3d, 0xfc,
	0x5f, 0xb3, 0xe2, 0x58, 0xf5, 0x50, 0x39, 0xd6, 0x1f, 0x0a, 0xe8, 0x56, 0x44, 0xb6, 0xd2, 0x83,
	0xde, 0x80, 0x65, 0x00, 0x98, 0x46, 0xa7, 0x33, 0x12, 0xc5, 0x78, 0xf9, 0xe8, 0xfc, 0xdb, 0xe9,
	0x8f, 0x6a, 0xab, 0xd7, 0xea, 0x77, 0x2c, 0x81, 0x45, 0xe0, 0x7f, 0x72, 0xfa, 0x44, 0x6d, 0x0b,
	0xfd, 0x4f, 0x4e, 0x9f, 0x88, 0x94, 0xdc, 0x17, 0x2b, 0xa9, 0x83, 0x8f, 0x45, 0xdc, 0xd7, 0x93,
	0x2b, 0xa4, 0xbe, 0x7e, 0xc9, 0xd5, 0xb8, 0xe7, 0xc9, 0x7d, 0xce, 0x72, 0x2b, 0xb6, 0x76, 0x6b,
	0x6e, 0x3c, 0x62, 0x6d, 0x45, 0x1e, 0xf1, 0x4f, 0x05, 0xdc, 0xae, 0xe8, 0x39, 0x0b, 0x49, 0x3c,
	0x4d, 0x9e, 0x93, 0x2b, 0xdc, 0x27, 0x15, 0x1c, 0xb2, 0xf7, 0x68, 0x1c, 0xb0, 0xfb, 0xd4, 0xb1,
	0xb2, 0x21, 0xd4, 0xc0, 0xbb, 0xec, 0xf3, 0xe9, 0x2a, 0x66, 0x57, 0xa4, 0x63, 0xe5, 0x63, 0xd8,
	0x05, 0xfb, 0xec, 0xfd, 0x62, 0xa2, 0x74, 0xac, 0x74, 0x20, 0x12, 0xed, 0x40, 0x2c, 0x5a, 0x0f,
	0xe8, 0xe2, 0x0c, 0xd6, 0x93, 0x2c, 0x74, 0xbd, 0xae, 0x49, 0x0a, 0x32, 0xc8, 0x93, 0xfc, 0x35,
	0x4d, 0xb2, 0xd8, 0xea, 0xff, 0x3d, 0x49, 0x4e, 0x52, 0xc0, 0x20, 0x27, 0xf9, 0xbb, 0x02, 0x6e,
	0x55, 0x36, 0x6b, 0x1c, 0x3c, 0x23, 0x57, 0xe0, 0x67, 0x80, 0x76, 0x52, 0x62, 0xf9, 0xb3, 0xad,
	0x19, 0xbc, 0xc6, 0x1a, 0x49, 0x81, 0x35, 0x5e, 0x3c, 0x58, 0xe0, 0x18, 0x3d, 0x60, 0x6f, 0xb6,
	0xc5, 0xfc, 0x76, 0x78, 0xa9, 0xef, 0x82, 0x8f, 0x6a, 0x04, 0xd7, 0xe9, 0x17, 0xdb, 0xf0, 0x96,
	0xd2, 0xaf, 0x12, 0xcc, 0xe9, 0x7f, 0xcf, 0xd8, 0x17, 0xfb, 0x73, 0x35, 0xf6, 0x1c, 0xa3, 0x1a,
	0x26, 0xc7, 0x38, 0x05, 0x47, 0x13, 0xea, 0xcc, 0x62, 0xb4, 0xf0, 0xf0, 0xb6, 0xd3, 0xd7, 0x05,
	0xfb, 0xec, 0xec, 0xf0, 0xf8, 0xe9, 0xa0, 0xb8, 0x2a, 0xad, 0xd2, 0x55, 0x39, 0x56, 0xd9, 0xe9,
	0x2e, 0xc5, 0xcd, 0x11, 0x47, 0xa5, 0xcb, 0xfd, 0x34, 0x15, 0x72, 0x8a, 0x22, 0xe4, 0xd3, 0x86,
	0x67, 0x71, 0x5c, 0xba, 0x4e, 0x95, 0x35, 0x59, 0x54, 0x78, 0x1f, 0xdc, 0x0c, 0x91, 0xfd, 0x1c,
	0xc7, 0x73, 0x8a, 0xcf, 0x56, 0x38, 0xb0, 0x31, 0x8b, 0xd1, 0xb6, 0x8e, 0xd2, 0xe9, 0x19, 0x9f,
	0x1d, 0xbd, 0x7e, 0x0f, 0xb4, 0x26, 0xd4, 0x81, 0xaf, 0x00, 0x14, 0xf4, 0x5a, 0xc6, 0xc6, 0x8e,
	0x42, 0xd8, 0xe6, 0x68, 0x5f, 0xed, 0xe6, 0x9f, 0xd3, 0x7d, 0x05, 0xa0, 0xa0, 0x25, 0x6a, 0x44,
	0xaf, 0xfb, 0x37, 0xa3, 0x6f, 0xee, 0x5e, 0x12, 0x74, 0x41, 0xeb, 0xd2, 0x88, 0x5e, 0xf7, 0x6f,
	0x46, 0xdf, 0xdc, 0xcf, 0xc0, 0x73, 0x70, 0xab, 0xde, 0xcb, 0x0c, 0xe5, 0x84, 0xe4, 0xee, 0xda,
	0x97, 0x3b, 0xb9, 0x97, 0xa1, 0xeb, 0x9d, 0xc6, 0x50, 0x4e, 0x45, 0x29, 0xe8, 0x8d, 0xbd, 0x40,
	0x02, 0x5d, 0x6f, 0x04, 0x86, 0x72, 0x12, 0x4a, 0x41, 0x6f, 0x6c, 0x1a, 0xe0, 0x2f, 0xe0, 0x03,
	0x51, 0xc3, 0x60, 0xca, 0x69, 0x98, 0x2f, 0xd0, 0x1e, 0xee, 0xb8, 0xa0, 0x4c, 0x40, 0x54, 0xcc,
	0x4d, 0x39, 0x25, 0x25, 0x09, 0x34, 0x14, 0xdb, 0x84, 0x80, 0xa8, 0xd0, 0x9a, 0x72, 0x7a, 0x4a,
	0x12, 0x68, 0x28, 0xa4, 0x30, 0x04, 0x47, 0x6b, 0x45, 0x74, 0x20, 0x27, 0x66, 0xe2, 0xab, 0x8d,
	0xe4, 0x7d, 0xcb, 0x88, 0x6b, 0x75, 0x6f, 0x20, 0xa7, 0xde, 0x76, 0x44, 0x71, 0xb9, 0x4a, 0x10,
	0xd7, 0x6a, 0xd5, 0x40, 0x4e, 0xae, 0xed, 0x88, 0xe2, 0xe2, 0x05, 0x1d, 0x70, 0xa3, 0x5c, 0xb9,
	0xee, 0x37, 0x85, 0x28, 0x39, 0x6a, 0xa6, 0xa4, 0x63, 0xfd, 0x00, 0x57, 0x0b, 0x96, 0xc4, 0x01,
	0xae, 0x2c, 0x90, 0x39, 0xc0, 0xc2, 0xf2, 0xf6, 0xe8, 0xf1, 0x5f, 0x17, 0xba, 0xf2, 0xe6, 0x42,
	0x57, 0xfe, 0xb9, 0xd0, 0x95, 0xdf, 0x2e, 0xf5, 0xbd, 0x37, 0x97, 0xfa, 0xde, 0xdf, 0x97, 0xfa,
	0xde, 0x4f, 0x03, 0xc7, 0x8d, 0x7f, 0x5e, 0x2d, 0x0c, 0x9b, 0xf8, 0x66, 0x12, 0xdc, 0x2c, 0x82,
	0x9b, 0x2f, 0xcd, 0xfc, 0xf7, 0xcb, 0x79, 0x88, 0xe9, 0xe2, 0x80, 0xfd, 0x6a, 0xf8, 0xe2, 0xdf,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xe4, 0x5c, 0xc0, 0xb6, 0x96, 0x11, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreatePoolPosition(ctx context.Context, in *MsgCreatePoolPosition, opts ...grpc.CallOption) (*MsgCreatePoolPositionResponse, error)
	UpdatePoolPosition(ctx context.Context, in *MsgUpdatePoolPosition, opts ...grpc.CallOption) (*MsgUpdatePoolPositionResponse, error)
	DeletePoolPosition(ctx context.Context, in *MsgDeletePoolPosition, opts ...grpc.CallOption) (*MsgDeletePoolPositionResponse, error)
	CreatePoolRanking(ctx context.Context, in *MsgCreatePoolRanking, opts ...grpc.CallOption) (*MsgCreatePoolRankingResponse, error)
	UpdatePoolRanking(ctx context.Context, in *MsgUpdatePoolRanking, opts ...grpc.CallOption) (*MsgUpdatePoolRankingResponse, error)
	DeletePoolRanking(ctx context.Context, in *MsgDeletePoolRanking, opts ...grpc.CallOption) (*MsgDeletePoolRankingResponse, error)
	CreatePoolSpotPrice(ctx context.Context, in *MsgCreatePoolSpotPrice, opts ...grpc.CallOption) (*MsgCreatePoolSpotPriceResponse, error)
	UpdatePoolSpotPrice(ctx context.Context, in *MsgUpdatePoolSpotPrice, opts ...grpc.CallOption) (*MsgUpdatePoolSpotPriceResponse, error)
	DeletePoolSpotPrice(ctx context.Context, in *MsgDeletePoolSpotPrice, opts ...grpc.CallOption) (*MsgDeletePoolSpotPriceResponse, error)
	CreatePoolInfo(ctx context.Context, in *MsgCreatePoolInfo, opts ...grpc.CallOption) (*MsgCreatePoolInfoResponse, error)
	UpdatePoolInfo(ctx context.Context, in *MsgUpdatePoolInfo, opts ...grpc.CallOption) (*MsgUpdatePoolInfoResponse, error)
	DeletePoolInfo(ctx context.Context, in *MsgDeletePoolInfo, opts ...grpc.CallOption) (*MsgDeletePoolInfoResponse, error)
	StablePrice(ctx context.Context, in *MsgStablePrice, opts ...grpc.CallOption) (*MsgStablePriceResponse, error)
	UpdateOsmosisParams(ctx context.Context, in *MsgUpdateOsmosisParams, opts ...grpc.CallOption) (*MsgUpdateOsmosisParamsResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreatePoolPosition(ctx context.Context, in *MsgCreatePoolPosition, opts ...grpc.CallOption) (*MsgCreatePoolPositionResponse, error) {
	out := new(MsgCreatePoolPositionResponse)
	err := c.cc.Invoke(ctx, "/abag.quasarnode.qoracle.Msg/CreatePoolPosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdatePoolPosition(ctx context.Context, in *MsgUpdatePoolPosition, opts ...grpc.CallOption) (*MsgUpdatePoolPositionResponse, error) {
	out := new(MsgUpdatePoolPositionResponse)
	err := c.cc.Invoke(ctx, "/abag.quasarnode.qoracle.Msg/UpdatePoolPosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeletePoolPosition(ctx context.Context, in *MsgDeletePoolPosition, opts ...grpc.CallOption) (*MsgDeletePoolPositionResponse, error) {
	out := new(MsgDeletePoolPositionResponse)
	err := c.cc.Invoke(ctx, "/abag.quasarnode.qoracle.Msg/DeletePoolPosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreatePoolRanking(ctx context.Context, in *MsgCreatePoolRanking, opts ...grpc.CallOption) (*MsgCreatePoolRankingResponse, error) {
	out := new(MsgCreatePoolRankingResponse)
	err := c.cc.Invoke(ctx, "/abag.quasarnode.qoracle.Msg/CreatePoolRanking", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdatePoolRanking(ctx context.Context, in *MsgUpdatePoolRanking, opts ...grpc.CallOption) (*MsgUpdatePoolRankingResponse, error) {
	out := new(MsgUpdatePoolRankingResponse)
	err := c.cc.Invoke(ctx, "/abag.quasarnode.qoracle.Msg/UpdatePoolRanking", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeletePoolRanking(ctx context.Context, in *MsgDeletePoolRanking, opts ...grpc.CallOption) (*MsgDeletePoolRankingResponse, error) {
	out := new(MsgDeletePoolRankingResponse)
	err := c.cc.Invoke(ctx, "/abag.quasarnode.qoracle.Msg/DeletePoolRanking", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreatePoolSpotPrice(ctx context.Context, in *MsgCreatePoolSpotPrice, opts ...grpc.CallOption) (*MsgCreatePoolSpotPriceResponse, error) {
	out := new(MsgCreatePoolSpotPriceResponse)
	err := c.cc.Invoke(ctx, "/abag.quasarnode.qoracle.Msg/CreatePoolSpotPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdatePoolSpotPrice(ctx context.Context, in *MsgUpdatePoolSpotPrice, opts ...grpc.CallOption) (*MsgUpdatePoolSpotPriceResponse, error) {
	out := new(MsgUpdatePoolSpotPriceResponse)
	err := c.cc.Invoke(ctx, "/abag.quasarnode.qoracle.Msg/UpdatePoolSpotPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeletePoolSpotPrice(ctx context.Context, in *MsgDeletePoolSpotPrice, opts ...grpc.CallOption) (*MsgDeletePoolSpotPriceResponse, error) {
	out := new(MsgDeletePoolSpotPriceResponse)
	err := c.cc.Invoke(ctx, "/abag.quasarnode.qoracle.Msg/DeletePoolSpotPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreatePoolInfo(ctx context.Context, in *MsgCreatePoolInfo, opts ...grpc.CallOption) (*MsgCreatePoolInfoResponse, error) {
	out := new(MsgCreatePoolInfoResponse)
	err := c.cc.Invoke(ctx, "/abag.quasarnode.qoracle.Msg/CreatePoolInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdatePoolInfo(ctx context.Context, in *MsgUpdatePoolInfo, opts ...grpc.CallOption) (*MsgUpdatePoolInfoResponse, error) {
	out := new(MsgUpdatePoolInfoResponse)
	err := c.cc.Invoke(ctx, "/abag.quasarnode.qoracle.Msg/UpdatePoolInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeletePoolInfo(ctx context.Context, in *MsgDeletePoolInfo, opts ...grpc.CallOption) (*MsgDeletePoolInfoResponse, error) {
	out := new(MsgDeletePoolInfoResponse)
	err := c.cc.Invoke(ctx, "/abag.quasarnode.qoracle.Msg/DeletePoolInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StablePrice(ctx context.Context, in *MsgStablePrice, opts ...grpc.CallOption) (*MsgStablePriceResponse, error) {
	out := new(MsgStablePriceResponse)
	err := c.cc.Invoke(ctx, "/abag.quasarnode.qoracle.Msg/StablePrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateOsmosisParams(ctx context.Context, in *MsgUpdateOsmosisParams, opts ...grpc.CallOption) (*MsgUpdateOsmosisParamsResponse, error) {
	out := new(MsgUpdateOsmosisParamsResponse)
	err := c.cc.Invoke(ctx, "/abag.quasarnode.qoracle.Msg/UpdateOsmosisParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreatePoolPosition(context.Context, *MsgCreatePoolPosition) (*MsgCreatePoolPositionResponse, error)
	UpdatePoolPosition(context.Context, *MsgUpdatePoolPosition) (*MsgUpdatePoolPositionResponse, error)
	DeletePoolPosition(context.Context, *MsgDeletePoolPosition) (*MsgDeletePoolPositionResponse, error)
	CreatePoolRanking(context.Context, *MsgCreatePoolRanking) (*MsgCreatePoolRankingResponse, error)
	UpdatePoolRanking(context.Context, *MsgUpdatePoolRanking) (*MsgUpdatePoolRankingResponse, error)
	DeletePoolRanking(context.Context, *MsgDeletePoolRanking) (*MsgDeletePoolRankingResponse, error)
	CreatePoolSpotPrice(context.Context, *MsgCreatePoolSpotPrice) (*MsgCreatePoolSpotPriceResponse, error)
	UpdatePoolSpotPrice(context.Context, *MsgUpdatePoolSpotPrice) (*MsgUpdatePoolSpotPriceResponse, error)
	DeletePoolSpotPrice(context.Context, *MsgDeletePoolSpotPrice) (*MsgDeletePoolSpotPriceResponse, error)
	CreatePoolInfo(context.Context, *MsgCreatePoolInfo) (*MsgCreatePoolInfoResponse, error)
	UpdatePoolInfo(context.Context, *MsgUpdatePoolInfo) (*MsgUpdatePoolInfoResponse, error)
	DeletePoolInfo(context.Context, *MsgDeletePoolInfo) (*MsgDeletePoolInfoResponse, error)
	StablePrice(context.Context, *MsgStablePrice) (*MsgStablePriceResponse, error)
	UpdateOsmosisParams(context.Context, *MsgUpdateOsmosisParams) (*MsgUpdateOsmosisParamsResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreatePoolPosition(ctx context.Context, req *MsgCreatePoolPosition) (*MsgCreatePoolPositionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePoolPosition not implemented")
}
func (*UnimplementedMsgServer) UpdatePoolPosition(ctx context.Context, req *MsgUpdatePoolPosition) (*MsgUpdatePoolPositionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePoolPosition not implemented")
}
func (*UnimplementedMsgServer) DeletePoolPosition(ctx context.Context, req *MsgDeletePoolPosition) (*MsgDeletePoolPositionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePoolPosition not implemented")
}
func (*UnimplementedMsgServer) CreatePoolRanking(ctx context.Context, req *MsgCreatePoolRanking) (*MsgCreatePoolRankingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePoolRanking not implemented")
}
func (*UnimplementedMsgServer) UpdatePoolRanking(ctx context.Context, req *MsgUpdatePoolRanking) (*MsgUpdatePoolRankingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePoolRanking not implemented")
}
func (*UnimplementedMsgServer) DeletePoolRanking(ctx context.Context, req *MsgDeletePoolRanking) (*MsgDeletePoolRankingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePoolRanking not implemented")
}
func (*UnimplementedMsgServer) CreatePoolSpotPrice(ctx context.Context, req *MsgCreatePoolSpotPrice) (*MsgCreatePoolSpotPriceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePoolSpotPrice not implemented")
}
func (*UnimplementedMsgServer) UpdatePoolSpotPrice(ctx context.Context, req *MsgUpdatePoolSpotPrice) (*MsgUpdatePoolSpotPriceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePoolSpotPrice not implemented")
}
func (*UnimplementedMsgServer) DeletePoolSpotPrice(ctx context.Context, req *MsgDeletePoolSpotPrice) (*MsgDeletePoolSpotPriceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePoolSpotPrice not implemented")
}
func (*UnimplementedMsgServer) CreatePoolInfo(ctx context.Context, req *MsgCreatePoolInfo) (*MsgCreatePoolInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePoolInfo not implemented")
}
func (*UnimplementedMsgServer) UpdatePoolInfo(ctx context.Context, req *MsgUpdatePoolInfo) (*MsgUpdatePoolInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePoolInfo not implemented")
}
func (*UnimplementedMsgServer) DeletePoolInfo(ctx context.Context, req *MsgDeletePoolInfo) (*MsgDeletePoolInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePoolInfo not implemented")
}
func (*UnimplementedMsgServer) StablePrice(ctx context.Context, req *MsgStablePrice) (*MsgStablePriceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StablePrice not implemented")
}
func (*UnimplementedMsgServer) UpdateOsmosisParams(ctx context.Context, req *MsgUpdateOsmosisParams) (*MsgUpdateOsmosisParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOsmosisParams not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreatePoolPosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreatePoolPosition)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreatePoolPosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/abag.quasarnode.qoracle.Msg/CreatePoolPosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreatePoolPosition(ctx, req.(*MsgCreatePoolPosition))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdatePoolPosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdatePoolPosition)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdatePoolPosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/abag.quasarnode.qoracle.Msg/UpdatePoolPosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdatePoolPosition(ctx, req.(*MsgUpdatePoolPosition))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeletePoolPosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeletePoolPosition)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeletePoolPosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/abag.quasarnode.qoracle.Msg/DeletePoolPosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeletePoolPosition(ctx, req.(*MsgDeletePoolPosition))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreatePoolRanking_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreatePoolRanking)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreatePoolRanking(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/abag.quasarnode.qoracle.Msg/CreatePoolRanking",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreatePoolRanking(ctx, req.(*MsgCreatePoolRanking))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdatePoolRanking_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdatePoolRanking)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdatePoolRanking(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/abag.quasarnode.qoracle.Msg/UpdatePoolRanking",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdatePoolRanking(ctx, req.(*MsgUpdatePoolRanking))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeletePoolRanking_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeletePoolRanking)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeletePoolRanking(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/abag.quasarnode.qoracle.Msg/DeletePoolRanking",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeletePoolRanking(ctx, req.(*MsgDeletePoolRanking))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreatePoolSpotPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreatePoolSpotPrice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreatePoolSpotPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/abag.quasarnode.qoracle.Msg/CreatePoolSpotPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreatePoolSpotPrice(ctx, req.(*MsgCreatePoolSpotPrice))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdatePoolSpotPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdatePoolSpotPrice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdatePoolSpotPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/abag.quasarnode.qoracle.Msg/UpdatePoolSpotPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdatePoolSpotPrice(ctx, req.(*MsgUpdatePoolSpotPrice))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeletePoolSpotPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeletePoolSpotPrice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeletePoolSpotPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/abag.quasarnode.qoracle.Msg/DeletePoolSpotPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeletePoolSpotPrice(ctx, req.(*MsgDeletePoolSpotPrice))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreatePoolInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreatePoolInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreatePoolInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/abag.quasarnode.qoracle.Msg/CreatePoolInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreatePoolInfo(ctx, req.(*MsgCreatePoolInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdatePoolInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdatePoolInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdatePoolInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/abag.quasarnode.qoracle.Msg/UpdatePoolInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdatePoolInfo(ctx, req.(*MsgUpdatePoolInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeletePoolInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeletePoolInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeletePoolInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/abag.quasarnode.qoracle.Msg/DeletePoolInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeletePoolInfo(ctx, req.(*MsgDeletePoolInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StablePrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStablePrice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StablePrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/abag.quasarnode.qoracle.Msg/StablePrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StablePrice(ctx, req.(*MsgStablePrice))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateOsmosisParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateOsmosisParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateOsmosisParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/abag.quasarnode.qoracle.Msg/UpdateOsmosisParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateOsmosisParams(ctx, req.(*MsgUpdateOsmosisParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "abag.quasarnode.qoracle.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePoolPosition",
			Handler:    _Msg_CreatePoolPosition_Handler,
		},
		{
			MethodName: "UpdatePoolPosition",
			Handler:    _Msg_UpdatePoolPosition_Handler,
		},
		{
			MethodName: "DeletePoolPosition",
			Handler:    _Msg_DeletePoolPosition_Handler,
		},
		{
			MethodName: "CreatePoolRanking",
			Handler:    _Msg_CreatePoolRanking_Handler,
		},
		{
			MethodName: "UpdatePoolRanking",
			Handler:    _Msg_UpdatePoolRanking_Handler,
		},
		{
			MethodName: "DeletePoolRanking",
			Handler:    _Msg_DeletePoolRanking_Handler,
		},
		{
			MethodName: "CreatePoolSpotPrice",
			Handler:    _Msg_CreatePoolSpotPrice_Handler,
		},
		{
			MethodName: "UpdatePoolSpotPrice",
			Handler:    _Msg_UpdatePoolSpotPrice_Handler,
		},
		{
			MethodName: "DeletePoolSpotPrice",
			Handler:    _Msg_DeletePoolSpotPrice_Handler,
		},
		{
			MethodName: "CreatePoolInfo",
			Handler:    _Msg_CreatePoolInfo_Handler,
		},
		{
			MethodName: "UpdatePoolInfo",
			Handler:    _Msg_UpdatePoolInfo_Handler,
		},
		{
			MethodName: "DeletePoolInfo",
			Handler:    _Msg_DeletePoolInfo_Handler,
		},
		{
			MethodName: "StablePrice",
			Handler:    _Msg_StablePrice_Handler,
		},
		{
			MethodName: "UpdateOsmosisParams",
			Handler:    _Msg_UpdateOsmosisParams_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "qoracle/tx.proto",
}

func (m *MsgCreatePoolPosition) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePoolPosition) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePoolPosition) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LastUpdatedTime != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LastUpdatedTime))
		i--
		dAtA[i] = 0x20
	}
	if m.Metrics != nil {
		{
			size, err := m.Metrics.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PoolId) > 0 {
		i -= len(m.PoolId)
		copy(dAtA[i:], m.PoolId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PoolId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatePoolPositionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePoolPositionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePoolPositionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePoolPosition) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePoolPosition) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePoolPosition) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LastUpdatedTime != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LastUpdatedTime))
		i--
		dAtA[i] = 0x20
	}
	if m.Metrics != nil {
		{
			size, err := m.Metrics.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PoolId) > 0 {
		i -= len(m.PoolId)
		copy(dAtA[i:], m.PoolId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PoolId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePoolPositionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePoolPositionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePoolPositionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeletePoolPosition) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePoolPosition) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePoolPosition) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PoolId) > 0 {
		i -= len(m.PoolId)
		copy(dAtA[i:], m.PoolId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PoolId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeletePoolPositionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePoolPositionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePoolPositionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreatePoolRanking) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePoolRanking) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePoolRanking) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LastUpdatedTime != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LastUpdatedTime))
		i--
		dAtA[i] = 0x28
	}
	if len(m.PoolIdsSortedByTVL) > 0 {
		for iNdEx := len(m.PoolIdsSortedByTVL) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.PoolIdsSortedByTVL[iNdEx])
			copy(dAtA[i:], m.PoolIdsSortedByTVL[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.PoolIdsSortedByTVL[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.PoolIdsSortedByAPY) > 0 {
		for iNdEx := len(m.PoolIdsSortedByAPY) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.PoolIdsSortedByAPY[iNdEx])
			copy(dAtA[i:], m.PoolIdsSortedByAPY[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.PoolIdsSortedByAPY[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatePoolRankingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePoolRankingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePoolRankingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePoolRanking) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePoolRanking) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePoolRanking) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LastUpdatedTime != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LastUpdatedTime))
		i--
		dAtA[i] = 0x28
	}
	if len(m.PoolIdsSortedByTVL) > 0 {
		for iNdEx := len(m.PoolIdsSortedByTVL) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.PoolIdsSortedByTVL[iNdEx])
			copy(dAtA[i:], m.PoolIdsSortedByTVL[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.PoolIdsSortedByTVL[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.PoolIdsSortedByAPY) > 0 {
		for iNdEx := len(m.PoolIdsSortedByAPY) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.PoolIdsSortedByAPY[iNdEx])
			copy(dAtA[i:], m.PoolIdsSortedByAPY[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.PoolIdsSortedByAPY[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePoolRankingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePoolRankingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePoolRankingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeletePoolRanking) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePoolRanking) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePoolRanking) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeletePoolRankingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePoolRankingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePoolRankingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreatePoolSpotPrice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePoolSpotPrice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePoolSpotPrice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LastUpdatedTime != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LastUpdatedTime))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Price) > 0 {
		i -= len(m.Price)
		copy(dAtA[i:], m.Price)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Price)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.DenomOut) > 0 {
		i -= len(m.DenomOut)
		copy(dAtA[i:], m.DenomOut)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DenomOut)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.DenomIn) > 0 {
		i -= len(m.DenomIn)
		copy(dAtA[i:], m.DenomIn)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DenomIn)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PoolId) > 0 {
		i -= len(m.PoolId)
		copy(dAtA[i:], m.PoolId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PoolId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatePoolSpotPriceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePoolSpotPriceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePoolSpotPriceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePoolSpotPrice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePoolSpotPrice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePoolSpotPrice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LastUpdatedTime != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LastUpdatedTime))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Price) > 0 {
		i -= len(m.Price)
		copy(dAtA[i:], m.Price)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Price)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.DenomOut) > 0 {
		i -= len(m.DenomOut)
		copy(dAtA[i:], m.DenomOut)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DenomOut)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.DenomIn) > 0 {
		i -= len(m.DenomIn)
		copy(dAtA[i:], m.DenomIn)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DenomIn)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PoolId) > 0 {
		i -= len(m.PoolId)
		copy(dAtA[i:], m.PoolId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PoolId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePoolSpotPriceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePoolSpotPriceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePoolSpotPriceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeletePoolSpotPrice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePoolSpotPrice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePoolSpotPrice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.DenomOut) > 0 {
		i -= len(m.DenomOut)
		copy(dAtA[i:], m.DenomOut)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DenomOut)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.DenomIn) > 0 {
		i -= len(m.DenomIn)
		copy(dAtA[i:], m.DenomIn)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DenomIn)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PoolId) > 0 {
		i -= len(m.PoolId)
		copy(dAtA[i:], m.PoolId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PoolId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeletePoolSpotPriceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePoolSpotPriceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePoolSpotPriceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreatePoolInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePoolInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePoolInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LastUpdatedTime != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LastUpdatedTime))
		i--
		dAtA[i] = 0x20
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PoolId) > 0 {
		i -= len(m.PoolId)
		copy(dAtA[i:], m.PoolId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PoolId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatePoolInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePoolInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePoolInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePoolInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePoolInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePoolInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LastUpdatedTime != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LastUpdatedTime))
		i--
		dAtA[i] = 0x20
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PoolId) > 0 {
		i -= len(m.PoolId)
		copy(dAtA[i:], m.PoolId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PoolId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePoolInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePoolInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePoolInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeletePoolInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePoolInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePoolInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PoolId) > 0 {
		i -= len(m.PoolId)
		copy(dAtA[i:], m.PoolId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PoolId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeletePoolInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePoolInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePoolInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgStablePrice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStablePrice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStablePrice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Price) > 0 {
		i -= len(m.Price)
		copy(dAtA[i:], m.Price)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Price)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStablePriceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStablePriceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStablePriceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateOsmosisParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateOsmosisParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateOsmosisParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateOsmosisParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateOsmosisParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateOsmosisParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PacketSequence != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.PacketSequence))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreatePoolPosition) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PoolId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Metrics != nil {
		l = m.Metrics.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LastUpdatedTime != 0 {
		n += 1 + sovTx(uint64(m.LastUpdatedTime))
	}
	return n
}

func (m *MsgCreatePoolPositionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdatePoolPosition) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PoolId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Metrics != nil {
		l = m.Metrics.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LastUpdatedTime != 0 {
		n += 1 + sovTx(uint64(m.LastUpdatedTime))
	}
	return n
}

func (m *MsgUpdatePoolPositionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeletePoolPosition) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PoolId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeletePoolPositionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreatePoolRanking) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.PoolIdsSortedByAPY) > 0 {
		for _, s := range m.PoolIdsSortedByAPY {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.PoolIdsSortedByTVL) > 0 {
		for _, s := range m.PoolIdsSortedByTVL {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if m.LastUpdatedTime != 0 {
		n += 1 + sovTx(uint64(m.LastUpdatedTime))
	}
	return n
}

func (m *MsgCreatePoolRankingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdatePoolRanking) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.PoolIdsSortedByAPY) > 0 {
		for _, s := range m.PoolIdsSortedByAPY {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.PoolIdsSortedByTVL) > 0 {
		for _, s := range m.PoolIdsSortedByTVL {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if m.LastUpdatedTime != 0 {
		n += 1 + sovTx(uint64(m.LastUpdatedTime))
	}
	return n
}

func (m *MsgUpdatePoolRankingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeletePoolRanking) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeletePoolRankingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreatePoolSpotPrice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PoolId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DenomIn)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DenomOut)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Price)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LastUpdatedTime != 0 {
		n += 1 + sovTx(uint64(m.LastUpdatedTime))
	}
	return n
}

func (m *MsgCreatePoolSpotPriceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdatePoolSpotPrice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PoolId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DenomIn)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DenomOut)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Price)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LastUpdatedTime != 0 {
		n += 1 + sovTx(uint64(m.LastUpdatedTime))
	}
	return n
}

func (m *MsgUpdatePoolSpotPriceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeletePoolSpotPrice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PoolId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DenomIn)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DenomOut)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeletePoolSpotPriceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreatePoolInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PoolId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LastUpdatedTime != 0 {
		n += 1 + sovTx(uint64(m.LastUpdatedTime))
	}
	return n
}

func (m *MsgCreatePoolInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdatePoolInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PoolId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LastUpdatedTime != 0 {
		n += 1 + sovTx(uint64(m.LastUpdatedTime))
	}
	return n
}

func (m *MsgUpdatePoolInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeletePoolInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PoolId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeletePoolInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgStablePrice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Price)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgStablePriceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateOsmosisParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateOsmosisParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PacketSequence != 0 {
		n += 1 + sovTx(uint64(m.PacketSequence))
	}
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreatePoolPosition) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePoolPosition: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePoolPosition: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PoolId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metrics", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Metrics == nil {
				m.Metrics = &PoolMetrics{}
			}
			if err := m.Metrics.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdatedTime", wireType)
			}
			m.LastUpdatedTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdatedTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePoolPositionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePoolPositionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePoolPositionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePoolPosition) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePoolPosition: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePoolPosition: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PoolId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metrics", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Metrics == nil {
				m.Metrics = &PoolMetrics{}
			}
			if err := m.Metrics.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdatedTime", wireType)
			}
			m.LastUpdatedTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdatedTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePoolPositionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePoolPositionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePoolPositionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePoolPosition) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePoolPosition: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePoolPosition: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PoolId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePoolPositionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePoolPositionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePoolPositionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePoolRanking) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePoolRanking: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePoolRanking: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolIdsSortedByAPY", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PoolIdsSortedByAPY = append(m.PoolIdsSortedByAPY, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolIdsSortedByTVL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PoolIdsSortedByTVL = append(m.PoolIdsSortedByTVL, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdatedTime", wireType)
			}
			m.LastUpdatedTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdatedTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePoolRankingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePoolRankingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePoolRankingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePoolRanking) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePoolRanking: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePoolRanking: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolIdsSortedByAPY", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PoolIdsSortedByAPY = append(m.PoolIdsSortedByAPY, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolIdsSortedByTVL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PoolIdsSortedByTVL = append(m.PoolIdsSortedByTVL, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdatedTime", wireType)
			}
			m.LastUpdatedTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdatedTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePoolRankingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePoolRankingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePoolRankingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePoolRanking) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePoolRanking: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePoolRanking: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePoolRankingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePoolRankingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePoolRankingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePoolSpotPrice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePoolSpotPrice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePoolSpotPrice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PoolId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DenomIn", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DenomIn = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DenomOut", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DenomOut = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Price = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdatedTime", wireType)
			}
			m.LastUpdatedTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdatedTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePoolSpotPriceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePoolSpotPriceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePoolSpotPriceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePoolSpotPrice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePoolSpotPrice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePoolSpotPrice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PoolId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DenomIn", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DenomIn = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DenomOut", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DenomOut = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Price = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdatedTime", wireType)
			}
			m.LastUpdatedTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdatedTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePoolSpotPriceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePoolSpotPriceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePoolSpotPriceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePoolSpotPrice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePoolSpotPrice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePoolSpotPrice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PoolId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DenomIn", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DenomIn = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DenomOut", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DenomOut = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePoolSpotPriceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePoolSpotPriceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePoolSpotPriceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePoolInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePoolInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePoolInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PoolId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &balancer.Pool{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdatedTime", wireType)
			}
			m.LastUpdatedTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdatedTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePoolInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePoolInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePoolInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePoolInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePoolInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePoolInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PoolId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &balancer.Pool{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdatedTime", wireType)
			}
			m.LastUpdatedTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdatedTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePoolInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePoolInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePoolInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePoolInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePoolInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePoolInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PoolId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePoolInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePoolInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePoolInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStablePrice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStablePrice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStablePrice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Price = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStablePriceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStablePriceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStablePriceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateOsmosisParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateOsmosisParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateOsmosisParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateOsmosisParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateOsmosisParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateOsmosisParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PacketSequence", wireType)
			}
			m.PacketSequence = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PacketSequence |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
