syntax = "proto3";
package abag.quasarnode.qoracle;

import "gogoproto/gogo.proto";
import "qoracle/ibc.proto";
import "cosmos/base/v1beta1/coin.proto";
import "osmosis/v9/pool-incentives/v1beta1/query.proto";
import "osmosis/v9/gamm/pool-models/balancer/balancerPool.proto";

option go_package = "github.com/abag/quasarnode/x/qoracle/types";

message OsmosisParams {
  IBCParams icq_params = 1 
    [(gogoproto.moretags) = "yaml:\"icq_params\"", (gogoproto.nullable) = false, (gogoproto.customname) = "ICQParams"]; // IBC params for a valid icq connection to osmosis
  string epoch_identifier = 2; // epoch used for updating osmosis pools information and calculations
}

message OsmosisRequestState {
  uint64 packet_sequence = 1;
  bool acknowledged = 2;
  bool failed = 3;
  int64 updated_at_height = 4;
}

message IncentivizedPools {
  repeated osmosis.poolincentives.v1beta1.IncentivizedPool incentivized_pools = 1 [(gogoproto.nullable) = false];
}

message OsmosisPool {
  osmosis.gamm.v1beta1.Pool pool_info = 1 [(gogoproto.nullable) = false];
  OsmosisPoolMetrics metrics = 2 [(gogoproto.nullable) = false];
}

message OsmosisPoolMetrics {
  bytes apy = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.customname) = "APY",
    (gogoproto.nullable) = false
  ];
  bytes tvl = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.customname) = "TVL",
    (gogoproto.nullable) = false
  ];
}