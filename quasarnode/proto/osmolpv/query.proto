syntax = "proto3";
package abag.quasarnode.osmolpv;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "osmolpv/params.proto";
import "osmolpv/fee_data.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/abag/quasarnode/x/osmolpv/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/abag/quasarnode/osmolpv/params";
  }
  // Queries a list of ReserveBalance items.
	rpc ReserveBalance(QueryReserveBalanceRequest) returns (QueryReserveBalanceResponse) {
		option (google.api.http).get = "/abag/quasarnode/osmolpv/reserve_balance/{denom}";
	}

// Queries a FeeData by index.
	rpc FeeData(QueryGetFeeDataRequest) returns (QueryGetFeeDataResponse) {
		option (google.api.http).get = "/abag/quasarnode/osmolpv/fee_data";
	}
// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryReserveBalanceRequest {
  string denom = 1;
}

message QueryReserveBalanceResponse {
  uint64 amount = 1;
}

message QueryGetFeeDataRequest {}

message QueryGetFeeDataResponse {
	FeeData FeeData = 1 [(gogoproto.nullable) = false];
}
// this line is used by starport scaffolding # 3
