syntax = "proto3";
package abag.quasarnode.intergamm;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "intergamm/params.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/abag/quasarnode/x/intergamm/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/abag/quasarnode/intergamm/params";
  }
  // Queries a list of InterchainAccountFromAddress items.
	rpc InterchainAccountFromAddress(QueryInterchainAccountFromAddressRequest) returns (QueryInterchainAccountFromAddressResponse) {
		option (google.api.http).get = "/abag/quasarnode/intergamm/interchain_account_from_address";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryInterchainAccountFromAddressRequest {
  string owner                      = 1;
  string connection_id = 2 [(gogoproto.moretags) = "yaml:\"connection_id\""];
}

message QueryInterchainAccountFromAddressResponse {
  string interchain_account_address = 1 [(gogoproto.moretags) = "yaml:\"interchain_account_address\""];
}

// this line is used by starport scaffolding # 3
