syntax = "proto3";
package abag.quasarnode.qbank;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "qbank/params.proto";
import "qbank/deposit.proto";
import "qbank/withdraw.proto";
 import "qbank/common.proto";
// this line is used by starport scaffolding # 1
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/abag/quasarnode/x/qbank/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/abag/quasarnode/qbank/params";
  }
 
// Queries a list of UserDenomDeposit items.
	rpc UserDenomDeposit(QueryUserDenomDepositRequest) returns (QueryUserDenomDepositResponse) {
		option (google.api.http).get = "/abag/quasarnode/qbank/user_denom_deposit/{userAcc}";
	}

 
 
// Queries a list of UserDeposit items.
	rpc UserDeposit(QueryUserDepositRequest) returns (QueryUserDepositResponse) {
		option (google.api.http).get = "/abag/quasarnode/qbank/user_deposit/{userAcc}";
	}

// Queries a list of UserDenomLockupDeposit items.
	rpc UserDenomLockupDeposit(QueryUserDenomLockupDepositRequest) returns (QueryUserDenomLockupDepositResponse) {
		option (google.api.http).get = "/abag/quasarnode/qbank/user_denom_lockup_deposit/{userAcc}/{denom}/{lockupType}";
	}

// Queries a list of UserDenomEpochLockupDeposit items.
	rpc UserDenomEpochLockupDeposit(QueryUserDenomEpochLockupDepositRequest) returns (QueryUserDenomEpochLockupDepositResponse) {
		option (google.api.http).get = "/abag/quasarnode/qbank/user_denom_epoch_lockup_deposit/{userAcc}/{denom}/{epochDay}/{lockupType}";
	}

// Queries a list of UserWithdraw items.
	rpc UserWithdraw(QueryUserWithdrawRequest) returns (QueryUserWithdrawResponse) {
		option (google.api.http).get = "/abag/quasarnode/qbank/user_withdraw/{userAcc}";
	}

// Queries a list of UserDenomWithdraw items.
	rpc UserDenomWithdraw(QueryUserDenomWithdrawRequest) returns (QueryUserDenomWithdrawResponse) {
		option (google.api.http).get = "/abag/quasarnode/qbank/user_denom_withdraw/{userAcc}/{denom}";
	}

// Queries a list of UserClaimRewards items.
	rpc UserClaimRewards(QueryUserClaimRewardsRequest) returns (QueryUserClaimRewardsResponse) {
		option (google.api.http).get = "/abag/quasarnode/qbank/user_claim_rewards/{userAcc}";
	}

// Queries a list of Withdrable items.
	rpc Withdrable(QueryWithdrableRequest) returns (QueryWithdrableResponse) {
		option (google.api.http).get = "/abag/quasarnode/qbank/withdrable/{userAccount}/{denom}";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}
  
message QueryUserDenomDepositRequest {
  string userAcc = 1;
  string denom = 2;
}

message QueryUserDenomDepositResponse {
	uint64 amount = 1;
}
 

message QueryUserDepositRequest {
  string userAcc = 1;
}

message QueryUserDepositResponse {
	QCoins coins  = 1 
	[(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/abag/quasarnode/x/qbank/types.QCoins"]; 
}

message QueryUserDenomLockupDepositRequest {
  string userAcc = 1;
  string denom = 2;
  string lockupType = 3;
}

message QueryUserDenomLockupDepositResponse {
	uint64 amount = 1;
}

message QueryUserDenomEpochLockupDepositRequest {
  string userAcc = 1;
  string denom = 2;
  repeated uint64 epochDay = 3;
  string lockupType = 4;
}

message QueryUserDenomEpochLockupDepositResponse {
	uint64 amount = 1;
}

message QueryUserWithdrawRequest {
  string userAcc = 1;
}

message QueryUserWithdrawResponse {
	QCoins coins  = 1 
	[(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/abag/quasarnode/x/qbank/types.QCoins"]; 

}

message QueryUserDenomWithdrawRequest {
  string userAcc = 1;
  string denom = 2;
}

message QueryUserDenomWithdrawResponse {
	uint64 amount = 1;
}

message QueryUserClaimRewardsRequest {
  string userAcc = 1;
}

message QueryUserClaimRewardsResponse {
	QCoins coins  = 1 
	[(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/abag/quasarnode/x/qbank/types.QCoins"]; 
}

message QueryWithdrableRequest {
  string userAccount = 1;
  string denom = 2;
}

message QueryWithdrableResponse {
  cosmos.base.v1beta1.Coin coin = 1 [(gogoproto.nullable) = false];
}

// this line is used by starport scaffolding # 3
