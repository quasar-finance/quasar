name: Test Quasar

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

# This workflow makes x86_64 binaries for linux.
# TODO: add darwin later
jobs:
  test-go:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Display go version
        run: go version
      - name: Run all tests
        run: make test-cover
      - name: Code coverage report
        uses: codecov/codecov-action@v1.5.2
  test-rust:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.59.0
          target: wasm32-unknown-unknown
          profile: default
          override: true
      - name: Install cosmwasm check
        run: cargo install cosmwasm-check
      # - name: Compile wasm code
      #   uses: docker://cosmwasm/rust-optimizer:0.12.6
      #   with:
      #     args: >-
      #       --rm -v "$(pwd)":/code
      #       --mount type=volume,source="$(basename "$(pwd)")_cache",target=/code/target
      #       --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry
      - name: Compile wasm code
        run: cd smart-contracts && docker run --rm -v "$(pwd)":/code --mount type=volume,source="$(basename "$(pwd)")_cache",target=/code/target --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry cosmwasm/rust-optimizer:0.12.6
      - name: Run cosmwasm check
        run: cd smart-contracts && cosmwasm-check artifacts/*.wasm
  test-e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Display go version
        run: go version
      - name: Build Docker Image
        run: make docker-build
      - name: Test E2E
        run: make test-e2e
